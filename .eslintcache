[{"C:\\Users\\HP\\OneDrive\\Escritorio\\BlackRock-LegalHackathon-\\src\\index.js":"1","C:\\Users\\HP\\OneDrive\\Escritorio\\BlackRock-LegalHackathon-\\src\\App.js":"2","C:\\Users\\HP\\OneDrive\\Escritorio\\BlackRock-LegalHackathon-\\src\\reportWebVitals.js":"3","C:\\Users\\HP\\OneDrive\\Escritorio\\BlackRock-LegalHackathon-\\src\\firebase.js":"4","C:\\Users\\HP\\OneDrive\\Escritorio\\BlackRock-LegalHackathon-\\src\\Components\\Main.jsx":"5","C:\\Users\\HP\\OneDrive\\Escritorio\\BlackRock-LegalHackathon-\\src\\Components\\DetalleMes.jsx":"6","C:\\Users\\HP\\OneDrive\\Escritorio\\BlackRock-LegalHackathon-\\src\\Components\\DetalleAlerta.jsx":"7","C:\\Users\\HP\\OneDrive\\Escritorio\\BlackRock-LegalHackathon-\\src\\Components\\Login.jsx":"8","C:\\Users\\HP\\OneDrive\\Escritorio\\BlackRock-LegalHackathon-\\src\\Components\\Filtros.jsx":"9","C:\\Users\\HP\\OneDrive\\Escritorio\\BlackRock-LegalHackathon-\\src\\Components\\ChartRock.jsx":"10","C:\\Users\\HP\\OneDrive\\Escritorio\\BlackRock-LegalHackathon-\\src\\Components\\TablaAlertas.jsx":"11","C:\\Users\\HP\\OneDrive\\Escritorio\\BlackRock-LegalHackathon-\\src\\Components\\ModalLimite.jsx":"12","C:\\Users\\HP\\OneDrive\\Escritorio\\BlackRock-LegalHackathon-\\src\\Components\\ModalAlerta.jsx":"13"},{"size":539,"mtime":1606250757023,"results":"14","hashOfConfig":"15"},{"size":674,"mtime":1606484811948,"results":"16","hashOfConfig":"15"},{"size":375,"mtime":1606250757028,"results":"17","hashOfConfig":"15"},{"size":636,"mtime":1606250757020,"results":"18","hashOfConfig":"15"},{"size":2200,"mtime":1606484812587,"results":"19","hashOfConfig":"15"},{"size":5093,"mtime":1606491806630,"results":"20","hashOfConfig":"15"},{"size":8090,"mtime":1606497995959,"results":"21","hashOfConfig":"15"},{"size":3507,"mtime":1606491806710,"results":"22","hashOfConfig":"15"},{"size":3525,"mtime":1606484812519,"results":"23","hashOfConfig":"15"},{"size":1801,"mtime":1606426218816,"results":"24","hashOfConfig":"15"},{"size":4040,"mtime":1606491806939,"results":"25","hashOfConfig":"15"},{"size":1278,"mtime":1606491806920,"results":"26","hashOfConfig":"15"},{"size":2455,"mtime":1606491806825,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"hyz25t",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},"C:\\Users\\HP\\OneDrive\\Escritorio\\BlackRock-LegalHackathon-\\src\\index.js",[],["60","61"],"C:\\Users\\HP\\OneDrive\\Escritorio\\BlackRock-LegalHackathon-\\src\\App.js",[],"C:\\Users\\HP\\OneDrive\\Escritorio\\BlackRock-LegalHackathon-\\src\\reportWebVitals.js",[],"C:\\Users\\HP\\OneDrive\\Escritorio\\BlackRock-LegalHackathon-\\src\\firebase.js",[],"C:\\Users\\HP\\OneDrive\\Escritorio\\BlackRock-LegalHackathon-\\src\\Components\\Main.jsx",["62","63"],"import Filtros from \"./Filtros\";\r\nimport TablaAlertas from \"./TablaAlertas\";\r\nimport ChartRock from \"./ChartRock\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useReducer, useEffect, useState } from \"react\";\r\n// import logoApp from '../img/alerta.png';\r\n\r\n\r\nfunction reducer(state, action) {\r\n    const filtroValor = action.value;\r\n    const nombreFiltro = action.name;\r\n\r\n    switch (nombreFiltro) {\r\n        case \"descripcionAlerta\":\r\n            state.descripcionAlerta = filtroValor;\r\n            break;\r\n        case \"evaluacion\":\r\n            state.evaluacion = filtroValor;\r\n            break;\r\n        case \"mesoperacion\":\r\n            state.mesoperacion = filtroValor;\r\n            break;\r\n        case \"aniooperacion\":\r\n            state.aniooperacion = filtroValor;\r\n            break;\r\n        case \"objetocuenta\":\r\n            state.objetocuenta = filtroValor;\r\n            break;\r\n        case \"cuenta\":\r\n            state.cuenta = filtroValor;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return {\r\n        descripcionAlerta: state.descripcionAlerta,\r\n        evaluacion: state.evaluacion,\r\n        mesoperacion: state.mesoperacion,\r\n        aniooperacion: state.aniooperacion,\r\n        objetocuenta: state.objetocuenta,\r\n        cuenta:state.cuenta\r\n    };\r\n}\r\n\r\n\r\nconst Main = () => {\r\n\r\n    const initialState = {\r\n        descripcionAlerta: \"value0\",\r\n        evaluacion: \"value0\",\r\n        mesoperacion: \"10\",\r\n        aniooperacion:\"2020\",\r\n        objetocuenta:\"value0\",\r\n        cuenta:\"value0\"\r\n    };\r\n\r\n    const [filtros, setFiltros] = useReducer(reducer, initialState);\r\n    return( \r\n        <div>\r\n            <div>\r\n            <Link to= \"/\">\r\n                <button>Logout</button>\r\n            </Link>\r\n            <div className=\"logoBlackrock\">\r\n            {/* <img src ={logoApp} alt=\"30\" height=\"57\"/> */}\r\n            <h1>BlackRock </h1>\r\n            </div>\r\n        </div>\r\n            <p>Bienvenid@ {localStorage.getItem(\"nombredeusuario\")}</p>\r\n            <Filtros  cambioFiltros={setFiltros} />\r\n            <TablaAlertas filtros={filtros}/>\r\n            <ChartRock/>\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default Main;","C:\\Users\\HP\\OneDrive\\Escritorio\\BlackRock-LegalHackathon-\\src\\Components\\DetalleMes.jsx",["64"],"import dataBlackRock from \"../Data/datablackrock.json\";\r\nimport { Link } from \"react-router-dom\";\r\nimport dataAlerta from \"../Data/alertas.json\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n//import data from '../Data/data.json';\r\n\r\n\r\nconst DetalleMes = () => {\r\n    const { id } = useParams();\r\n    const data = dataBlackRock;\r\n    const filtroAlerta = dataAlerta.filter(item => item.idalerta == id)\r\n    const propscuenta = filtroAlerta[0].cuenta; // 305235;\r\n\r\n    const propsfechaoperacion= filtroAlerta[0].aniooperacion.toString() +\"-\"+ filtroAlerta[0].mesoperacion.toString(); //\"2020-10\";\r\n\r\n\r\n\r\n    //-------------------FUNCIÓN MANEJO MAYÚSCULAS STRINGS--------------------------------->\r\n    const mayusculas = (frase) => {\r\n        let arr = frase.split(\" \");\r\n        let palabra = \"\";\r\n        let fraseFinal = \"\";\r\n        for (let i = 0; i < arr.length; i++) {\r\n            palabra = arr[i];\r\n            fraseFinal = fraseFinal + \" \" + palabra.charAt(0).toUpperCase() + palabra.slice(1).toLowerCase();\r\n        }\r\n        return fraseFinal;\r\n    }\r\n    //-------------------FUNCIÓN FORMATO DE MONEDA EN PESOS MEXICANOS--------------------------------->\r\n    const formatCurrency = (number) =>{\r\n        return number.toLocaleString('es-MX', {currency: 'MXN', style: 'currency'});\r\n    }\r\n\r\n\r\n    //--------------------FUNCIÓN FILTER (CUENTA-MES)-------------------------------------->\r\n    const functionFilter = (month) => {\r\n        let compare = false;\r\n        if (month.cuenta === propscuenta) {\r\n            if (month.fechaoperacion.substring(0, 7) === propsfechaoperacion) {\r\n                compare = true;\r\n            }\r\n        }\r\n        return compare;\r\n    }\r\n\r\n    //--------------------FILTRO (CUENTA-MES)------------------------------------------>\r\n    const resultFilter = data.filter(detailMonth => functionFilter(detailMonth));\r\n\r\n    //--------------------CREACIÓN TABLA DINÁMICA-------------------------------------->\r\n    const dataTable = resultFilter.map((item, idx) => {\r\n        return (\r\n            <tr className=\"tr\" key={idx}>\r\n                <td className=\"td\">{item.fechaoperacion}</td>\r\n                <td className=\"td\">{mayusculas(item.tipooperacion)}</td>\r\n                <td className=\"tdValor\"> {formatCurrency(parseInt(item.monto))}</td>\r\n            </tr>\r\n        )\r\n    })\r\n\r\n    //------------------FUNCIÓN CÁLCULO TOTAL DEPÓSITOS-------------------------------->\r\n    const resultDeposito = (algo) => {\r\n        let acumm = 0;\r\n        for (let i = 0; i < algo.length; i++) {\r\n            if (algo[i].tipooperacion === \"DEPOSITO\") {\r\n                acumm = acumm + parseInt(algo[i].monto);\r\n            }\r\n\r\n        }\r\n        return acumm;\r\n    }\r\n\r\n    //-------------------FUNCIÓN CÁLCULO TOTAL RETIROS--------------------------------->\r\n    const resultRetiro = (algo) => {\r\n        let acumm = 0;\r\n        for (let i = 0; i < algo.length; i++) {\r\n            if (algo[i].tipooperacion === \"Retiro\") {\r\n                acumm = acumm + parseInt(algo[i].monto);\r\n            }\r\n        }\r\n        return acumm;\r\n    }\r\n\r\n    return( \r\n    <div>\r\n        <div className=\"headerDetailMonth\">\r\n            <Link to= {\"/alerta/\"+id+\"/detalle\"}>\r\n                <button>Regresar</button>\r\n            </Link>\r\n            <Link to= \"/\">\r\n                <button>Logout</button>\r\n            </Link>\r\n        <h1>BlackRock</h1>\r\n        </div>\r\n\r\n        <div className=\"contentDetailMonth\">\r\n            <div><h3>NIC:</h3><p className=\"divp\">{filtroAlerta[0].nic}</p></div>\r\n            <div><h3>Cuenta: </h3><p className=\"divp\"> {filtroAlerta[0].cuenta}</p></div>\r\n            <div><h3>Razón Social:</h3><p className=\"divp\">xxxxxxxxxxxx</p></div>\r\n            <div><h3>Objeto:</h3><p className=\"divp\">{mayusculas(filtroAlerta[0].objetocuenta)}</p></div>\r\n            <div><h3>Antigüedad:</h3><p className=\"divp\">{filtroAlerta[0].antiguedad} Meses</p></div>\r\n            <div><h3>Monto Declarado:</h3><p className=\"divp\"> {formatCurrency(filtroAlerta[0].montodeclarado)}</p></div>\r\n            <div><h3>Límite:</h3><p className=\"divp\"> {formatCurrency(filtroAlerta[0].limiteMonto__1)}</p></div>\r\n        </div>\r\n\r\n        <div className=\"tableDetailMonth\">\r\n            <h2 className=\"historialmes\">Historial</h2>\r\n            <table className=\"history\">\r\n                <thead>\r\n                    <tr className=\"tr\">\r\n                        <th className=\"th\">Fecha</th>\r\n                        <th className=\"th\">Operación</th>\r\n                        <th className=\"th\">Monto</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {dataTable}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <div className=\"detallemontomes\">\r\n            <p className=\"pdetallemontomes\">Monto total depositos: {formatCurrency(resultDeposito(resultFilter))}</p>\r\n            <p className=\"pdetallemontomes\">Monto total Retiros: {formatCurrency(resultRetiro(resultFilter))}</p>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default DetalleMes;","C:\\Users\\HP\\OneDrive\\Escritorio\\BlackRock-LegalHackathon-\\src\\Components\\DetalleAlerta.jsx",["65","66","67","68","69","70","71","72"],"import { Link } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport dataAlerta from \"../Data/alertas.json\";\r\nimport ModalLimite from \"./ModalLimite\";\r\nimport ModalAlerta from \"./ModalAlerta\";\r\nimport './detalleAlerta.scss';\r\nimport alertaLogo from '../img/alerta.png'\r\nimport atras from '../img/atras.png'\r\nimport salir from '../img/salir.png'\r\n\r\n\r\n\r\nconst calcularDias = (algo) => {\r\n    let anio = algo.aniooperacion;\r\n    let mes = parseInt(algo.mesoperacion);\r\n    let dia = 1;\r\n    if(mes === 12){\r\n        mes = 0;\r\n        anio = anio + 1;\r\n    }\r\n    const fechaAlerta= new Date(anio,mes,dia);\r\n    fechaAlerta.setDate(fechaAlerta.getDate() + 60);\r\n    const fechaAlertaMiliseg = fechaAlerta.getTime();\r\n    const fechaActual = Date.now();\r\n    const diff =  fechaAlertaMiliseg - fechaActual;\r\n    const result = Math.round(diff/(1000 * 60 * 60 * 24 ));\r\n    if(result > 0 && algo.evaluacion===''){\r\n        return (<div className='regresiveCount'\r\n        style={\r\n            result>5\r\n              ? { backgroundColor: \"#05B135\" }\r\n              : { backgroundColor: \"#F20606\" }\r\n          }>\r\n            <h3>Esta alerta expira en:</h3>\r\n        <h1>{result} días</h1>\r\n        </div>)\r\n    }else{\r\n        return (\r\n            <div className='alertaFinalizada'>\r\n            <h2>Estudio de alerta finalizado</h2>\r\n        </div>)\r\n    }\r\n}\r\n\r\nlet mensajeUsuario = \"\";\r\n\r\n//-------------------FUNCIÓN FORMATO DE MONEDA EN PESOS MEXICANOS--------------------------------->\r\nconst formatCurrency = (number) =>{\r\n    return number.toLocaleString('es-MX', {currency: 'MXN', style: 'currency'});\r\n}\r\n\r\nconst alertaValida = (alerta) =>{\r\n    return (alerta.statusAlerta && alerta.statusAlerta == \"evaluada\");\r\n}\r\n\r\nconst updateFromStorage = (alerta) =>{\r\n    mensajeUsuario = \"\";\r\n    let evaluaciones = JSON.parse(localStorage.getItem(\"evaluaciones\"));\r\n    if(!evaluaciones)\r\n        evaluaciones = [];\r\n    let storage = evaluaciones.filter(ev => ev.id == alerta.idalerta);\r\n    if(storage.length > 0){\r\n        alerta.limiteMonto = storage[0].limite;\r\n        alerta.evaluacion = storage[0].evaluacion;\r\n        alerta.statusAlerta = storage[0].estado;\r\n\r\n        mensajeUsuario = \"Analizada por \" + localStorage.getItem(\"nombredeusuario\") + \" : \" + storage[0].analisis;\r\n    }\r\n    if(alerta.evaluacion.toLowerCase() === \"alerta real\")\r\n    mensajeUsuario = mensajeUsuario + \" ENVIADO A MINDS\"\r\n    return alerta;\r\n}\r\n\r\n\r\nconst DetalleAlerta = () => {\r\n    const [showLimit, setShowLimit] = useState(false);\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [alert, setAlert] = useState(false);\r\n    const [statusAlert, setStatusAlert] = useState(\"En investigacion\");\r\n    const [analisis, setAnalisis] = useState(\"\");\r\n\r\n    const { id } = useParams();\r\n    const filtroAlerta = dataAlerta.filter(item => item.idalerta == id);\r\n    const objAlerta = updateFromStorage(filtroAlerta[0]);\r\n    const [limit, setLimit] = useState(filtroAlerta[0].limiteMonto);\r\n    //setLimit(filtroAlerta[0].limiteMonto);\r\n    \r\n    return( \r\n    <div>\r\n        <div className=\"alertDetailHeader\">\r\n            <div className = 'headerButtons' >\r\n            <Link to= \"/main\">\r\n                <img src= {atras} ></img>\r\n            </Link>\r\n            <Link to= \"/\">\r\n                <img src = {salir}  ></img>\r\n            </Link>\r\n            </div>\r\n        <div className = 'blackrockLogo'>\r\n        <img className = 'alarmaIMG' src = {alertaLogo}></img>\r\n        <h1>BlackRock</h1>\r\n        </div>\r\n        </div>\r\n        <div className=\"contentDetailAlert\">\r\n            <div className=\"contentDetailAlert\">\r\n                <div className = 'textLine' ><h3>ID Alerta:</h3><p>{id}</p></div>\r\n                <div className = 'textLine' ><h3>NIC</h3> <p>{filtroAlerta[0].nic}</p></div>\r\n                <div className = 'textLine' ><h3>Razón Social:</h3><p>xxxxxxxxxxxx</p></div>\r\n                <div className = 'textLine' ><h3>Descripción:</h3><p>{filtroAlerta[0].descripcionAlerta}</p></div>\r\n            </div>\r\n        </div>\r\n                {calcularDias(filtroAlerta[0])}\r\n                <table className=\"detailAlert\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>Status</th>\r\n                            <td>{filtroAlerta[0].evaluacion}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>Objeto</th>\r\n                            <td>{filtroAlerta[0].objetocuenta}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>Tipo Persona</th>\r\n                            <td>{filtroAlerta[0].tipopersona}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>Antigüedad</th>\r\n                            <td>{filtroAlerta[0].antiguedad} Meses</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>Mes/Año</th>\r\n                            <td className = 'fila'> <p> {filtroAlerta[0].mesoperacion} / {filtroAlerta[0].aniooperacion}</p>\r\n                            <Link to= {\"/alerta/\" + id + \"/detallemes\"}>\r\n                                <button className = 'buttonDetails'>+</button>\r\n                            </Link>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>Monto Declarado</th>\r\n                            <td>{formatCurrency(filtroAlerta[0].montodeclarado)}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>Monto Operado</th>\r\n                            <td>{formatCurrency(parseInt(filtroAlerta[0].montoOperadoTotal))}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>Límite</th>\r\n                            <td className = 'fila' > \r\n                                <p>{formatCurrency(filtroAlerta[0].limiteMonto__1)}</p>\r\n                                <p>{limit > 0 ? limit : filtroAlerta[0].limiteMonto}x</p>\r\n                                {/* <button className = 'buttonLimite' onClick={() => setShowLimit(true)}>Editar</button> */}\r\n                                {!alertaValida(filtroAlerta[0]) && (<button className = 'buttonLimite' onClick={() => setShowLimit(true)}>Editar</button>)}\r\n                            </td>\r\n                                \r\n                            \r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n        <div className = 'evaluationContainer' >\r\n        {/* <input type=\"search\" placeholder=\"Indica el análisis de la alerta\"/>\r\n        <div className = 'evaluationButtons' >\r\n            <button className = 'alertaReal'  onClick={() =>{setShowAlert(true); setAlert(true);}}>Alerta Real</button>\r\n            <button className = 'falsoPositivo' onClick={() =>{setShowAlert(true); setAlert(false);}}>Falso Positivo</button>\r\n        </div> */}\r\n                    {/* <td>{formatCurrency(filtroAlerta[0].limiteMonto__1)}</td>\r\n                    <td>{limit > 0 ? limit : filtroAlerta[0].limiteMonto}x</td> */}\r\n    {!alertaValida(filtroAlerta[0]) && (<input type=\"search\" placeholder=\"Indica el análisis de la alerta\" onChange={(e)=> setAnalisis(e.target.value)}/>)}\r\n    {alertaValida(filtroAlerta[0]) ? <div><p>{mensajeUsuario}</p></div> : (       \r\n        <div className = 'evaluationButtons'>\r\n        <button className = 'alertaReal' onClick={() =>{setShowAlert(true); setAlert(true);}}>Alerta Real</button>\r\n        <button className = 'falsoPositivo' onClick={() =>{setShowAlert(true); setAlert(false);}}>Falso Positivo</button>\r\n        </div>\r\n        )}\r\n\r\n        <ModalAlerta idAlerta={id} limit={limit} analisis={analisis} show={showAlert} close={setShowAlert} alert={alert} setStatus={setStatusAlert}/>\r\n        <ModalLimite show={showLimit} close={setShowLimit} setLimit={setLimit}/>\r\n    </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default DetalleAlerta;","C:\\Users\\HP\\OneDrive\\Escritorio\\BlackRock-LegalHackathon-\\src\\Components\\Login.jsx",["73"],"import { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\n\r\n\r\n//inicio import material\r\nimport { Box, Button, Grid, TextField } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n//fin import material\r\n\r\n\r\n\r\nconst Login = () => {\r\n\r\n    let history = useHistory();\r\n    const [statusForm, setstatusForm] = useState(true);\r\n\r\n    const handleInputChange = (e) => {\r\n        localStorage.setItem(\"nombredeusuario\", e.target.value);\r\n    }\r\n\r\n    const sendUser = (e) =>{\r\n        e.preventDefault();\r\n        let password = e.target.elements['password'].value;\r\n        if(password === \"blackrock2020\"){\r\n            history.push(\"/main\");\r\n            return true;\r\n        }\r\n        setstatusForm(false);\r\n        console.log(\"estado\",statusForm);\r\n        return false;\r\n    }\r\n\r\n    //inicio objeto css\r\n    const useStyle = makeStyles({\r\n        headerLogin: {\r\n            background: \"black\",\r\n            color: \"white\",\r\n            textAlign: \"center\",\r\n            fontFamily: \"Roboto\",\r\n            fontSize: \"1rem\",\r\n        },\r\n        textLogin: {\r\n            background: \"white\",\r\n            color: \"black\",\r\n            textAlign: \"center\",\r\n            fontFamily: \"Roboto\",\r\n            fontSize: \"1.5rem\",\r\n        },\r\n        bodyLogin: {\r\n            background: \"white\",\r\n            color: \"black\",\r\n            textAlign: \"center\",\r\n        },\r\n        newcolor: {\r\n            background: \"#FF4713\",\r\n            border: \"0\",\r\n            borderRadius: \"0\",\r\n            color: \"white\",\r\n            heigth: \"48\",\r\n            float: \"right\",\r\n        },\r\n    })\r\n    //fin objeto css\r\n\r\n    //inicio hooks de estilos\r\n    const classes = useStyle();\r\n    //fin hooks de estilos\r\n\r\n    return (\r\n        <div>\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    <div className={classes.headerLogin}>\r\n                        <Box p={6}>\r\n                            BlackRock\r\n                        </Box>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <div className={classes.textLogin}>\r\n                        <Box pt={12} pb={5}>\r\n                            Iniciar Sesión\r\n                        </Box>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <form className={classes.bodyLogin} autoComplete=\"off\" onSubmit={(e)=>sendUser(e)}>\r\n                        <Box p={3}>\r\n                            <TextField size=\"medium\" name=\"mail\" type=\"text\" placeholder=\"Nombre Usuario\" onChange={handleInputChange} required />\r\n                        </Box>\r\n                        <Box p={3}>\r\n                            <TextField size=\"medium\" name=\"password\" placeholder=\"Password\" type=\"password\" required />\r\n                        </Box>\r\n                        <Box p={3}>\r\n                            <div>\r\n                                    <Button type=\"submit\" className={classes.newcolor} float = \"right\">\r\n                                        Iniciar Sesión\r\n                                </Button>\r\n                            </div>\r\n                        </Box>\r\n                    </form>\r\n                </Grid>\r\n            </Grid>\r\n            {!statusForm && (<div><p>Credenciales invalidas por favor verifique</p></div>)}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","C:\\Users\\HP\\OneDrive\\Escritorio\\BlackRock-LegalHackathon-\\src\\Components\\Filtros.jsx",[],"C:\\Users\\HP\\OneDrive\\Escritorio\\BlackRock-LegalHackathon-\\src\\Components\\ChartRock.jsx",[],"C:\\Users\\HP\\OneDrive\\Escritorio\\BlackRock-LegalHackathon-\\src\\Components\\TablaAlertas.jsx",[],"C:\\Users\\HP\\OneDrive\\Escritorio\\BlackRock-LegalHackathon-\\src\\Components\\ModalLimite.jsx",[],"C:\\Users\\HP\\OneDrive\\Escritorio\\BlackRock-LegalHackathon-\\src\\Components\\ModalAlerta.jsx",["74"],"\r\nimport './modalAlerta.scss';\r\n\r\n//inicio import material\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n//fin import material\r\n\r\n\r\nconst saveEvaluation = (evaluation)=>{\r\n    let evaluaciones = JSON.parse(localStorage.getItem(\"evaluaciones\"));\r\n    if(!evaluaciones)\r\n        evaluaciones = [];\r\n    let actualiza = evaluaciones.filter(ev => ev.id != evaluation.id);\r\n    actualiza.push({\r\n        id : evaluation.id,\r\n        limite : evaluation.limite,\r\n        analisis : evaluation.analisis,\r\n        evaluacion : evaluation.evaluacion,\r\n        estado : evaluation.estado\r\n    });\r\n\r\nlocalStorage.setItem(\"evaluaciones\", JSON.stringify(actualiza));\r\n}\r\n\r\n\r\n\r\nconst ModalAlerta = (props) => {\r\n\r\n    const validateAlert = (algo) => {\r\n        let result = \"\"\r\n        if(algo.alert === true){\r\n            result= \"Alerta Real\"\r\n        } else {\r\n            result = \"Falso Positivo\"\r\n        }\r\n        return result;\r\n    }\r\n\r\n    const DivModal = props.show && ( \r\n        <div className=\"overlay\">\r\n            <div className=\"popup\">\r\n            <button className = 'closeButton' onClick={()=> props.close(false)}>x</button>\r\n                <p className = 'modalText' >El status de la alerta: {props.idAlerta}</p>\r\n                <p className = 'modalText' >será actualizado a:</p>\r\n                <h1>{validateAlert(props)}</h1>\r\n                    <button className = 'acceptButton' onClick={()=> {\r\n                        props.setStatus(props.alert ? \"evaluada\" : \"En investigacion\");\r\n                        saveEvaluation({\r\n                            id : props.idAlerta,\r\n                            limite : props.limit,\r\n                            analisis : props.analisis,\r\n                            evaluacion : props.alert ? \"Alerta Real\" : \"Falso Positivo\",\r\n                            estado : \"evaluada\"\r\n                        })\r\n                        // props.setLimit(order);\r\n                        props.close(false);\r\n                    }}>Aceptar</button>\r\n                    \r\n            </div>\r\n        </div>);\r\n\r\n//inicio objeto css\r\nconst useStyle = makeStyles({\r\n    alertModal: {\r\n        fontFamily:\"Roboto\",\r\n    },\r\n})\r\n//fin objeto css\r\n\r\n//inicio hooks de estilos\r\nconst classes = useStyle();\r\n//fin hooks de estilos\r\n\r\n        return(\r\n            <div className={classes.alertModal}>\r\n                {DivModal}\r\n            </div>\r\n    )}\r\n    \r\nexport default ModalAlerta;",{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":5,"column":22,"nodeType":"81","messageId":"82","endLine":5,"endColumn":31},{"ruleId":"79","severity":1,"message":"83","line":5,"column":33,"nodeType":"81","messageId":"82","endLine":5,"endColumn":41},{"ruleId":"84","severity":1,"message":"85","line":12,"column":66,"nodeType":"86","messageId":"87","endLine":12,"endColumn":68},{"ruleId":"84","severity":1,"message":"85","line":54,"column":56,"nodeType":"86","messageId":"87","endLine":54,"endColumn":58},{"ruleId":"84","severity":1,"message":"85","line":62,"column":51,"nodeType":"86","messageId":"87","endLine":62,"endColumn":53},{"ruleId":"79","severity":1,"message":"88","line":80,"column":12,"nodeType":"81","messageId":"82","endLine":80,"endColumn":23},{"ruleId":"84","severity":1,"message":"85","line":84,"column":66,"nodeType":"86","messageId":"87","endLine":84,"endColumn":68},{"ruleId":"79","severity":1,"message":"89","line":85,"column":11,"nodeType":"81","messageId":"82","endLine":85,"endColumn":20},{"ruleId":"90","severity":1,"message":"91","line":94,"column":17,"nodeType":"92","endLine":94,"endColumn":36},{"ruleId":"90","severity":1,"message":"91","line":97,"column":17,"nodeType":"92","endLine":97,"endColumn":38},{"ruleId":"90","severity":1,"message":"91","line":101,"column":9,"nodeType":"92","endLine":101,"endColumn":57},{"ruleId":"79","severity":1,"message":"93","line":1,"column":10,"nodeType":"81","messageId":"82","endLine":1,"endColumn":14},{"ruleId":"84","severity":1,"message":"94","line":13,"column":53,"nodeType":"86","messageId":"87","endLine":13,"endColumn":55},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'statusAlert' is assigned a value but never used.","'objAlerta' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]